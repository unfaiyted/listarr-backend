basePath: /api/v1
definitions:
  models.ConfigResponse:
    properties:
      data:
        $ref: '#/definitions/models.Configuration'
      error:
        type: string
    type: object
  models.Configuration:
    properties:
      api_version:
        example: v1
        type: string
      database_url:
        example: postgres://localhost:5432/listarr
        type: string
      enable_caching:
        example: true
        type: boolean
      log_level:
        enum:
        - debug
        - info
        - warn
        - error
        example: info
        type: string
      max_page_size:
        example: 100
        maximum: 1000
        minimum: 1
        type: integer
      server_port:
        example: "8080"
        type: string
    required:
    - api_version
    - database_url
    - log_level
    - max_page_size
    - server_port
    type: object
  models.ErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  models.User:
    properties:
      email:
        example: john@example.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: John Doe
        maxLength: 100
        minLength: 2
        type: string
      password:
        description: omitempty will exclude it from JSON responses
        example: strongpassword123
        format: password
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API Server for Listarr application
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Listarr API
  version: "1.0"
paths:
  /config:
    get:
      consumes:
      - application/json
      description: Retrieve current application configuration
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Configuration'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ConfigResponse'
      summary: Get configuration
      tags:
      - config
    put:
      consumes:
      - application/json
      description: Update application configuration settings
      parameters:
      - description: Configuration settings
        in: body
        name: configuration
        required: true
        schema:
          $ref: '#/definitions/models.Configuration'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Configuration'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ConfigResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ConfigResponse'
      summary: Update configuration
      tags:
      - config
  /config/reset:
    post:
      consumes:
      - application/json
      description: Reset configuration to default values
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Configuration'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ConfigResponse'
      summary: Reset configuration
      tags:
      - config
  /users:
    get:
      consumes:
      - application/json
      description: Get all users in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user in the system
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user's information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a user
      tags:
      - users
schemes:
- http
swagger: "2.0"
